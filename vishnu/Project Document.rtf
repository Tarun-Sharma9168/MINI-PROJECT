{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}}
{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9                                       Story Visualization via NLP and Word Clouds\par
This paper describes the use of two open source software libraries for extracting meaning from a story\f1\endash\f0\lang1033  \f1\lang9 like textual narrative and displaying it in an intuitive and interactive manner to users via a set of word\f0\lang1033  \f1\lang9 cloud visualizations\f0\lang1033 .\par
This paper describes a software application that helps users visualize a story by making use of natural language processing (NLP) software and data visualization. this type of \ldblquote text understanding\rdblquote  is very different from other kinds. Reading and understanding a story is not the same as, say, reading and understanding a technical manual or an anatomy textbook.\par
There is a well-known saying: \ldblquote A picture tells a thousand words.\rdblquote  Visualization software can be used to draw a picture of this narrative via word clouds showing the interaction between subject, object, actions, places, times, and other contexts. This kind of visualization, leveraging on the NLP functionality discussed above, can help a user quickly capture the essence of a story.The combination of NLP and word cloud visualizations helps to bridge a gap between the NLP and visualization research communities.\par
 Natural language processing (NLP) is a branch of artificial intelligence, computer science, and computational linguistics. NLP systems perform many tasks necessary for making sense of text or speech recognition.NLP has advanced to the point that there are powerful open source APIs available, such as Apache\rquote s OpenNLP and Stanford\rquote s CoreNLP. These APIs include models for performing the above-mentioned tasks.\par
NLP/NLU systems, when combined with data visualization tools, can assist users to rapidly understand a body of text. For example, the output of NLP functions can be combined with word clouds to help users quickly capture the underlying meaning of a body of text.\par
\ul Using CoreNLP to Identify Story Elements\par
\ulnone\lang9 The annotators provide several useful services, including the following:\par
\f1\bullet  Breaking a text document into individual sentences\par
\bullet  Tokenizing a sentence (breaking it into individual \ldblquote words\rdblquote )\par
\bullet  Identifying parts of speech (POS) within a sentence (nouns, verbs, adjectives, adverbs, etc.)\par
\bullet  Named entity recognition \endash  recognizing names of people, places, organizations, dates/times, etc.\par
\bullet  Constituency parsing \endash  constructing taxonomies of noun phrases and verb phrases of a sentence\par
\bullet  Dependency parsing \endash  constructing the graph of dependency relationships between terms in a sentence\par
\bullet  Co-reference resolution \endash  finding all expressions that refer to the same entity in a text\f0\lang1033 .\par
Using CoreNLP, one can build software to facilitate story understanding. The above annotators help to extract higher-level meaning from text.\par
 Consider the following text:\par
Before summer of 2016, almost nobody expected Donald J. Trump to be our next president. Most pundits expected Hillary Clinton to win. But over time, Trump appealed to a core base of diehard supporters, and these supporters proved us wrong. During the Republican primaries, Trump beat Marco Rubio in Florida and was defeated by John Kasich in Ohio. Throughout the campaign, he repeatedly referred to Rubio as "Little Marco\ldblquote , and he castigated Ted Cruz as \ldblquote Lyin\rquote  Ted\rdblquote . Contrary to conventional wisdom, Trump beat Kasich, Rubio, Cruz, and all the other presidential candidates at the Republican national convention in Cleveland, Ohio in July. Also in July, Hillary Clinton defeated Bernie Sanders for the democratic nomination. Ultimately, Trump beat Hillary in the general election on Nov. 8, 2017, although Clinton beat Trump in Virginia and in Maryland. Overall, the popular vote favored Clinton, but the electoral college chose Trump. Since becoming president in January, Trump selected several cabinet appointees, he fought with the press (who he calls the "dishonest media"), and he tweeted  several times to the American people. In February, congress approved many of Trump's cabinet appointees. Also in February, Trump fired Mike Flynn because Flynn misled the vice president in January about his conversations with Russian officials in December. The American people have elected Donald Trump to be the next president of the United States. Now \ldblquote the Donald\rdblquote  is leading us, and we are apprehensively watching to see where he takes us.\par
This includes the actions that took place (verbs), the people or entities who performed these actions (subjects) and the people or entities who were affected (objects). You also have a sense of when and where these actions took place, as well as other contextual features.\par
The first two CoreNLP annotators are sentence splitting and tokenization. Sentence splitting seems pretty straightforward because sentences generally end in periods, question marks, or exclamation points. But there are some tricks to consider; for example, periods at the end abbreviations (e.g. Mr. or Ms. or Dr.).\par
Tokenization means splitting the sentence into individual words. Here, spaces are obvious delimiters, but also word contractions must be recognized (e.g. won\rquote t or I\rquote ll).\par
The next annotator is parts-of-speech (POS) tagging.POS results are important for identifying the actions (verbs). Also note that the subjects and objects of these actions are likely to be nouns. Also important is the named entity recognition (NER) annotator. NER is especially useful for story understanding, because it identifies words and phrases as people, locations, organizations, or dates and times, all of which are key story elements.\par
The most essential CoreNLP annotator for identifying the subjects and objects of actions is the dependency parser. The dependency parser breaks a sentence into dependency relations, which are binary predicates involving two words, a governor and a dependent (de Marneffe and Manning, 2008). Two key dependency relations of an active voice sentence are the nominal subject (nsubj) and the direct object (dobj). \par
A sentence will typically have several dependency relations between words. Some are particularly useful in identifying the connection between subjects and objects of complex sentences, or for more completely depicting a subject or object. There include adjectival modifiers (amod), noun modifiers (nn), prepositional modifiers (prep), verb modifiers (vmod), and open clausal complements (xcomp).\par
Another important CoreNLP annotator is coreference resolution. This associates words and phrases in the text that refer to the same entity. For example, in the above narrative, there are many sentences that refer to Trump. His full name first comes up in sentence 1, but then there are many other references to him. When applied to the above story, CoreNLP\rquote s coreference resolution annotator identified 15 mentions of Trump. Sometimes they are the same name, sometimes only first or last names, and sometimes the pronoun \ldblquote he\rdblquote .\par
\ul Interactive Word Cloud Visualization using D3\par
 \ulnone Here you see six word clouds. Each word or phrase in a word cloud is displayed with its position within the sentence and sentence number of its first occurrence. Here Trump\rquote s first occurrence is in sentence 1, position 11. Within a cloud, font size indicates impact or prevalence. Above, Trump is bigger than other subjects because of all the actions (verbs) he does and all the affected objects.\par
When the user hovers the mouse over a word in one cloud, the visualization highlights its related words in the other clouds. Above, Trump is selected in the subjects cloud, and appears in black. All the actions done by Trump, their affected objects, and the relevant places, times, and other contexts are highlighted.\par
Again, color coding associates the actions, subjects, and other contextual elements. Selecting a word in any word clouds displays associations for that word.\par
\ul Conclusion\par
\ulnone This paper presents an application that combines CoreNLP and D3 functionality to assist users in quickly understanding the basic elements of a story, employing the maxim \ldblquote a picture tells a thousand words.\rdblquote  The application uses CoreNLP to split the text into sentences, tokenize the sentences, identify parts-of-speech and named entities, and find coreferences. The application also traverses each sentence\rquote s dependency network generated by CoreNLP\rquote s syntactic parser. Using these tools, the program attempts to extract story\rquote s subjects, actions, and objects, as well as each action\rquote s contextual factors such as place, time, and prepositional elements. D3 is then used to display these in word clouds. This application demonstrates the promise of NLP and visualization technologies for facilitating natural language understanding (NLU), and decision support of unstructured data.\par
The current state of NLP (and especially NLU) is far less advanced and reliable than working with structured data. In addition, the application described here is limited to a narrow branch of text understanding; it applies only to understanding a story. The application is not well suited for extracting meaning from other types of text.\lang9\par
}
 